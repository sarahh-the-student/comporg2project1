#MIPS Program
.data 

#prompt user to enter number X
user_prompt: .asciiz "Please enter an integer number ! \n"

result_message: .asciiz "The formatted string is: \n"

# limits the input string to 1000 characters
buffer: .space 1000
delimiter: .asciiz "/"

.text 
main:

  #Load delimiter
  la $t0, delimiter
  
  #Print prompt message
  li $v0, 4 #system call to print string
  la $a0, user_prompt #loads address and prints user prompt
  syscall

  #Reading the input
  li $v0, 8
  la $a0, buffer 
  li $a1, 1000 #reading up to 1000 characters
  syscall

  #Initialize multiple variables

  li $t1, 0 #index for current substring
  li $t2, 0 #index for current character
  li $t3, 0 #counter for substrings
  li $t4, 0 #sum of current sub_string
  la $t7, buffer   #load address of buffer

  #print resulting message
  li $v0, 8
  la $a1, result_message
  syscall

  Process_whole_string:

    #loads each byte of user string X  
    lb $t5, 0($a0)

    #if character is Null, end loop because we are at the end of the string
    beqz $t5, end
    
  
    #if the character is equal to the delimiter '/' run the Split function
    beq $t5, delimiter, process_substring
  
    #increase index for current character
    addi $t2, $t2, 1 
  
    #move to next character
    addi $a0, $a0, 1
  
    j continue_whole_string

  process_substring:

    #store length of substring
    move $t6, $t2

    #load length of substring
    move $a1, $t6

    #load address of substring
    move $a2, $t7

    
    Loop_substrings:
      #loop through substring

      lbu $t8, 0($a2) #load next character
      addi $a2, $a2, 1 #move to next character

      #check if num
      blt $t8, 48, is_not_num #if the character's ascii value is less than 0 it is not a number
      bgt $t8, 57, is_not_num #if character's ascii value is greater than 9 it is not a number
        
    #check if capital letter
    blt $t5, 'Z', Is_upper_case
    blt $t5, 'z', Is_lower_case
    
  Is_num:
    add $t4, $t4, $t5

  Is_lower_case:
    add $t4, $t4, $t5

  Is_upper_case:
    add $t4, $t4, $t5
    


  Continue:








